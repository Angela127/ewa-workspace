{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/lib/localData.ts"],"sourcesContent":["import fsPromises from \"fs/promises\";\r\nimport path from \"path\";\r\n\r\nimport data from \"@/json/avatarConfig.json\";\r\nexport type JSONType = typeof data;\r\n\r\nexport async function getLocalData() {\r\n  // Get the path of the json file\r\n  const filePath = path.join(process.cwd(), \"json/avatarConfig.json\");\r\n  // Read the json file\r\n  const jsonData = await fsPromises.readFile(filePath) as unknown as string;\r\n  // Parse data as json\r\n  const objectData = JSON.parse(jsonData);\r\n\r\n  return objectData;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAKO,eAAe;IACpB,gCAAgC;IAChC,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAC1C,qBAAqB;IACrB,MAAM,WAAW,MAAM,uGAAA,CAAA,UAAU,CAAC,QAAQ,CAAC;IAC3C,qBAAqB;IACrB,MAAM,aAAa,KAAK,KAAK,CAAC;IAE9B,OAAO;AACT"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/components/RiveMainEntry.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/RiveMainEntry.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/RiveMainEntry.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/components/RiveMainEntry.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/RiveMainEntry.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/RiveMainEntry.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/app/context/avatarState.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvatarStateContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarStateContext() from the server but AvatarStateContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/context/avatarState.tsx <module evaluation>\",\n    \"AvatarStateContext\",\n);\nexport const AvatarStateProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarStateProvider() from the server but AvatarStateProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/context/avatarState.tsx <module evaluation>\",\n    \"AvatarStateProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6DACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6DACA"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/app/context/avatarState.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvatarStateContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarStateContext() from the server but AvatarStateContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/context/avatarState.tsx\",\n    \"AvatarStateContext\",\n);\nexport const AvatarStateProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarStateProvider() from the server but AvatarStateProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/context/avatarState.tsx\",\n    \"AvatarStateProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yCACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,yCACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/app/page.tsx"],"sourcesContent":["import { Suspense } from \"react\";\nimport RiveAvatar from \"@/components/RiveAvatarComponent\";\nimport { RuntimeLoader } from \"@rive-app/react-canvas\";\nimport RiveIconsContainer from \"@/components/RiveIconsContainer\";\nimport { getLocalData } from \"@/lib/localData\";\nimport { AvatarStateProvider } from \"./context/avatarState\";\n\nimport data from \"@/json/avatarConfig.json\";\nimport RiveOptionsContainer from \"@/components/RiveOptionsContainer\";\nimport RiveMainEntry from \"@/components/RiveMainEntry\";\nexport type JSONData = typeof data;\n\nexport default async function Home() {\n  const localData: JSONData = await getLocalData();\n  return (\n    <main className=\"block relative w-screen max-w-screen-xl h-screen max-h-screen md:mx-auto\">\n      <Suspense fallback={<p>loading</p>}>\n        <AvatarStateProvider>\n          <RiveMainEntry localData={localData} />\n        </AvatarStateProvider>\n      </Suspense>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAIA;AACA;AAIA;;;;;;AAGe,eAAe;IAC5B,MAAM,YAAsB,MAAM,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC7C,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,qMAAA,CAAA,WAAQ;YAAC,wBAAU,8OAAC;0BAAE;;;;;;sBACrB,cAAA,8OAAC,8HAAA,CAAA,sBAAmB;0BAClB,cAAA,8OAAC,4HAAA,CAAA,UAAa;oBAAC,WAAW;;;;;;;;;;;;;;;;;;;;;AAKpC"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/ewa_workspace/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,qCAAoC;gBAElD,UAAA,CAAA;gBAAA,QAAA;oBAAA,IAAA,0BAA4D;oBAAA;iBAAA;YAC5D;SAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;KAChDY,YAAY;cACVC,IAAAA,EAAMZ;YAAAA,MAAAA,CAAUa,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,iBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;;OACRC,YAAYnB;IACd,EAAA,QAAA;IAAA;CAAA","ignoreList":[0]}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}